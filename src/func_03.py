a= """
大家好。
欢迎回来。
在本课中，我们将讨论数据加密，尤其是在您的服务中，
在我们开始讨论加密之前。
让我们讨论一下数据的状态。
如果你从逻辑上思考，数据可能处于三种不同的状态，它可以被处理，它可以
正在运动或数据可以处于使用状态。
因此，当我说其余部分时，我的意思是数据已加密。
目前还没有通过网络传输。
它可能是一个日志文件。
它可能是您的备份文件，也可能只是数据文件。
不在使用中，不在运动中。
如果我说数据在运动，那意味着数据当前正在通过网络传输。
也许它是从现场到陪审员的旅行，也许它是旅行，你知道的，在两者之间
在您的服务中，或者它可能正在从您的网络传播到您的边界之外
网络。
但它正在网络中运行或正在使用 NSA 数据。
这意味着数据正在被某种应用程序处理。
也许它已经被生成或更新或追加。
但关键是它正在计算，当时正在对数据进行计算过程
已被某些应用程序，某些计算过程使用。
所以关键是，无论我们的数据在哪里，它都应该始终是加密的和敏捷的，有
配置选项，无论我们的数据处于何种状态，我们都可以通过它实际加密我们的数据
在。
在我们开始讨论如何对不同状态的数据进行加密之前，我想
讨论一下我们有什么样的加密，有哪些不同类型的加密
我们有。
所以一般来说，我们有两种加密方式，对称加密和非对称加密。
那么什么是非对称加密和非对称加密呢？
基本上，我们使用相同的密钥加密数据，然后使用相同的密钥解密数据。
所以你看到我们在这里有一条消息。
我使用相同的加密密钥和加密密钥，我得到我的加密消息，然后再次使用
相同的加密密钥，我可以获得我的消息，也可以获得我的原始消息。
这些类型的加密通常具有非常高的性能。
但真正具有挑战性的是，如果该密钥既可以加密，我该如何传输该密钥
而且我必须非常小心，以免它落入坏人之手。
因此，在应该有权访问的各方之间处理和分发该密钥，这真的可以
非常困难。
我们拥有的下一种加密类型是非对称加密。
在这种加密中，实际上我们有两个不同的密钥。
一个是 public，用于加密我的数据。
另一个是私钥，我用它来获取我的数据。
所以我的想法是，如果有人必须向我发送加密消息，他可以使用以下方法加密该消息
公钥。
这是公开的。
任何人都可以知道这件事。
但是当我收到那条消息时，我只能使用我的私钥解密。
而这个私钥是我的。
它不是公开的。
所以基本上，我只能将此消息解密为原始消息。
"""

# result_list = a.split('\n')
# print(result_list)
a = [1,2,3]
b= [{'name':'fxx'},{'name':'gjj'},{'name':'pnn'}]